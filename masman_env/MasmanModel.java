package masman_env;

import jason.environment.grid.GridWorldModel;
import jason.environment.grid.Location;
import java.util.logging.Logger;
import java.util.HashSet;

public class MasmanModel extends GridWorldModel {
    public static final int gridSizeW = 28;
    public static final int gridSizeH = 31;
    public static final int DOT = 16;
    public static final int NOTHING = 32;
    HashSet<Location> dots = new HashSet<Location>();
    Logger logger;
    private int nDots;

    private static MasmanModel model = null;    // singleton pattern to work on the same istance of the model everywhere

    public static MasmanModel get() {
        if(model == null)
            model = new MasmanModel();
        return model;
    }

    private MasmanModel(){
        super(gridSizeW, gridSizeH, 5); // sizew, sizeh, n moving agents
        logger = Logger.getLogger(MasmanModel.class.getName());
        // initial positions for the agents
        setAgPos(0, 14, 23);    // pacman
        setAgPos(1, 14, 11);    // blinky
        setAgPos(2, 13, 14);    // pinky
        setAgPos(3, 14, 14);    // inky
        setAgPos(4, 15, 14);    // clyde
        setupMap(); // add content to the cells
        addDotsToSet();    // fills the dots HashSet
    }

    public HashSet<Location> getDotSet() {
        return dots;
    }

    // action for moving agents in the requested cell
    public boolean move_to(int agent, Location dest) {
        if(inGrid(dest) && !hasObject(OBSTACLE, dest)) {
            setAgPos(agent, dest);
            return true;
        }
        return false;
    }

    // action to verify if the pacman and one or more ghosts are in the same cell
    public int check_pacman_killed(Location pos) {
        Location pacmanPos = getAgPos(0);
        for(int i=1; i<=4; ++i) {
            if(pacmanPos.equals(getAgPos(i)))
                // the id of the killer is returned to notify it
                return i;
        }
        return -1;
    }

    // action to let the pacman eat the dots on the map 
    public int remove_dot(Location loc) {
        // if there is actually a dot in loc
        if(dots.contains(loc)) {
            // it is visually removed from the map
            remove(DOT, loc);
            // it is removed from the set
            dots.remove(loc);
            // depending on the amount of collected dots
            // a new ghost can be released
            switch(nDots - dots.size()) {
                case 40:
                    return 2;
                case 80:
                    return 3;
                case 140:
                    return 4;
                default:
            }
            return 0;
        }
        return -1;
    }

    public int getRemainingDots() {
        return dots.size();
    }

    public void setupMap() {
        // -- row 0 --
        add(OBSTACLE, new Location( 0, 0));
        add(OBSTACLE, new Location( 1, 0));
        add(OBSTACLE, new Location( 2, 0));
        add(OBSTACLE, new Location( 3, 0));
        add(OBSTACLE, new Location( 4, 0));
        add(OBSTACLE, new Location( 5, 0));
        add(OBSTACLE, new Location( 6, 0));
        add(OBSTACLE, new Location( 7, 0));
        add(OBSTACLE, new Location( 8, 0));
        add(OBSTACLE, new Location( 9, 0));
        add(OBSTACLE, new Location(10, 0));
        add(OBSTACLE, new Location(11, 0));
        add(OBSTACLE, new Location(12, 0));
        add(OBSTACLE, new Location(13, 0));
        add(OBSTACLE, new Location(14, 0));
        add(OBSTACLE, new Location(15, 0));
        add(OBSTACLE, new Location(16, 0));
        add(OBSTACLE, new Location(17, 0));
        add(OBSTACLE, new Location(18, 0));
        add(OBSTACLE, new Location(19, 0));
        add(OBSTACLE, new Location(20, 0));
        add(OBSTACLE, new Location(21, 0));
        add(OBSTACLE, new Location(22, 0));
        add(OBSTACLE, new Location(23, 0));
        add(OBSTACLE, new Location(24, 0));
        add(OBSTACLE, new Location(25, 0));
        add(OBSTACLE, new Location(26, 0));
        add(OBSTACLE, new Location(27, 0));
        // -- row 1 -- 
        add(OBSTACLE, new Location( 0, 1));
        add(DOT,      new Location( 1, 1));
        add(DOT,      new Location( 2, 1));
        add(DOT,      new Location( 3, 1));
        add(DOT,      new Location( 4, 1));
        add(DOT,      new Location( 5, 1));
        add(DOT,      new Location( 6, 1));
        add(DOT,      new Location( 7, 1));
        add(DOT,      new Location( 8, 1));
        add(DOT,      new Location( 9, 1));
        add(DOT,      new Location(10, 1));
        add(DOT,      new Location(11, 1));
        add(DOT,      new Location(12, 1));
        add(OBSTACLE, new Location(13, 1));
        add(OBSTACLE, new Location(14, 1));
        add(DOT,      new Location(15, 1));
        add(DOT,      new Location(16, 1));
        add(DOT,      new Location(17, 1));
        add(DOT,      new Location(18, 1));
        add(DOT,      new Location(19, 1));
        add(DOT,      new Location(20, 1));
        add(DOT,      new Location(21, 1));
        add(DOT,      new Location(22, 1));
        add(DOT,      new Location(23, 1));
        add(DOT,      new Location(24, 1));
        add(DOT,      new Location(25, 1));
        add(DOT,      new Location(26, 1));
        add(OBSTACLE, new Location(27, 1));
        // -- row 2 --
        add(OBSTACLE, new Location( 0, 2));
        add(DOT,      new Location( 1, 2));
        add(OBSTACLE, new Location( 2, 2));
        add(OBSTACLE, new Location( 3, 2));
        add(OBSTACLE, new Location( 4, 2));
        add(OBSTACLE, new Location( 5, 2));
        add(DOT,      new Location( 6, 2));
        add(OBSTACLE, new Location( 7, 2));
        add(OBSTACLE, new Location( 8, 2));
        add(OBSTACLE, new Location( 9, 2));
        add(OBSTACLE, new Location(10, 2));
        add(OBSTACLE, new Location(11, 2));
        add(DOT,      new Location(12, 2));
        add(OBSTACLE, new Location(13, 2));
        add(OBSTACLE, new Location(14, 2));
        add(DOT,      new Location(15, 2));
        add(OBSTACLE, new Location(16, 2));
        add(OBSTACLE, new Location(17, 2));
        add(OBSTACLE, new Location(18, 2));
        add(OBSTACLE, new Location(19, 2));
        add(OBSTACLE, new Location(20, 2));
        add(DOT,      new Location(21, 2));
        add(OBSTACLE, new Location(22, 2));
        add(OBSTACLE, new Location(23, 2));
        add(OBSTACLE, new Location(24, 2));
        add(OBSTACLE, new Location(25, 2));
        add(DOT,      new Location(26, 2));
        add(OBSTACLE, new Location(27, 2));
        // -- row 3 --
        add(OBSTACLE, new Location( 0, 3));
        add(DOT,      new Location( 1, 3));
        add(OBSTACLE, new Location( 2, 3));
        add(OBSTACLE, new Location( 3, 3));
        add(OBSTACLE, new Location( 4, 3));
        add(OBSTACLE, new Location( 5, 3));
        add(DOT,      new Location( 6, 3));
        add(OBSTACLE, new Location( 7, 3));
        add(OBSTACLE, new Location( 8, 3));
        add(OBSTACLE, new Location( 9, 3));
        add(OBSTACLE, new Location(10, 3));
        add(OBSTACLE, new Location(11, 3));
        add(DOT,      new Location(12, 3));
        add(OBSTACLE, new Location(13, 3));
        add(OBSTACLE, new Location(14, 3));
        add(DOT,      new Location(15, 3));
        add(OBSTACLE, new Location(16, 3));
        add(OBSTACLE, new Location(17, 3));
        add(OBSTACLE, new Location(18, 3));
        add(OBSTACLE, new Location(19, 3));
        add(OBSTACLE, new Location(20, 3));
        add(DOT,      new Location(21, 3));
        add(OBSTACLE, new Location(22, 3));
        add(OBSTACLE, new Location(23, 3));
        add(OBSTACLE, new Location(24, 3));
        add(OBSTACLE, new Location(25, 3));
        add(DOT,      new Location(26, 3));
        add(OBSTACLE, new Location(27, 3));
        // -- row 4 --
        add(OBSTACLE, new Location( 0, 4));
        add(DOT,      new Location( 1, 4));
        add(OBSTACLE, new Location( 2, 4));
        add(OBSTACLE, new Location( 3, 4));
        add(OBSTACLE, new Location( 4, 4));
        add(OBSTACLE, new Location( 5, 4));
        add(DOT,      new Location( 6, 4));
        add(OBSTACLE, new Location( 7, 4));
        add(OBSTACLE, new Location( 8, 4));
        add(OBSTACLE, new Location( 9, 4));
        add(OBSTACLE, new Location(10, 4));
        add(OBSTACLE, new Location(11, 4));
        add(DOT,      new Location(12, 4));
        add(OBSTACLE, new Location(13, 4));
        add(OBSTACLE, new Location(14, 4));
        add(DOT,      new Location(15, 4));
        add(OBSTACLE, new Location(16, 4));
        add(OBSTACLE, new Location(17, 4));
        add(OBSTACLE, new Location(18, 4));
        add(OBSTACLE, new Location(19, 4));
        add(OBSTACLE, new Location(20, 4));
        add(DOT,      new Location(21, 4));
        add(OBSTACLE, new Location(22, 4));
        add(OBSTACLE, new Location(23, 4));
        add(OBSTACLE, new Location(24, 4));
        add(OBSTACLE, new Location(25, 4));
        add(DOT,      new Location(26, 4));
        add(OBSTACLE, new Location(27, 4));
        // -- row 5 --
        add(OBSTACLE, new Location( 0, 5));
        add(DOT,      new Location( 1, 5));
        add(DOT,      new Location( 2, 5));
        add(DOT,      new Location( 3, 5));
        add(DOT,      new Location( 4, 5));
        add(DOT,      new Location( 5, 5));
        add(DOT,      new Location( 6, 5));
        add(DOT,      new Location( 7, 5));
        add(DOT,      new Location( 8, 5));
        add(DOT,      new Location( 9, 5));
        add(DOT,      new Location(10, 5));
        add(DOT,      new Location(11, 5));
        add(DOT,      new Location(12, 5));
        add(DOT,      new Location(13, 5));
        add(DOT,      new Location(14, 5));
        add(DOT,      new Location(15, 5));
        add(DOT,      new Location(16, 5));
        add(DOT,      new Location(17, 5));
        add(DOT,      new Location(18, 5));
        add(DOT,      new Location(19, 5));
        add(DOT,      new Location(20, 5));
        add(DOT,      new Location(21, 5));
        add(DOT,      new Location(22, 5));
        add(DOT,      new Location(23, 5));
        add(DOT,      new Location(24, 5));
        add(DOT,      new Location(25, 5));
        add(DOT,      new Location(26, 5));
        add(OBSTACLE, new Location(27, 5));
        // -- row 6 --
        add(OBSTACLE, new Location( 0, 6));
        add(DOT,      new Location( 1, 6));
        add(OBSTACLE, new Location( 2, 6));
        add(OBSTACLE, new Location( 3, 6));
        add(OBSTACLE, new Location( 4, 6));
        add(OBSTACLE, new Location( 5, 6));
        add(DOT,      new Location( 6, 6));
        add(OBSTACLE, new Location( 7, 6));
        add(OBSTACLE, new Location( 8, 6));
        add(DOT,      new Location( 9, 6));
        add(OBSTACLE, new Location(10, 6));
        add(OBSTACLE, new Location(11, 6));
        add(OBSTACLE, new Location(12, 6));
        add(OBSTACLE, new Location(13, 6));
        add(OBSTACLE, new Location(14, 6));
        add(OBSTACLE, new Location(15, 6));
        add(OBSTACLE, new Location(16, 6));
        add(OBSTACLE, new Location(17, 6));
        add(DOT,      new Location(18, 6));
        add(OBSTACLE, new Location(19, 6));
        add(OBSTACLE, new Location(20, 6));
        add(DOT,      new Location(21, 6));
        add(OBSTACLE, new Location(22, 6));
        add(OBSTACLE, new Location(23, 6));
        add(OBSTACLE, new Location(24, 6));
        add(OBSTACLE, new Location(25, 6));
        add(DOT,      new Location(26, 6));
        add(OBSTACLE, new Location(27, 6));
        // -- row 7 --
        add(OBSTACLE, new Location( 0, 7));
        add(DOT,      new Location( 1, 7));
        add(OBSTACLE, new Location( 2, 7));
        add(OBSTACLE, new Location( 3, 7));
        add(OBSTACLE, new Location( 4, 7));
        add(OBSTACLE, new Location( 5, 7));
        add(DOT,      new Location( 6, 7));
        add(OBSTACLE, new Location( 7, 7));
        add(OBSTACLE, new Location( 8, 7));
        add(DOT,      new Location( 9, 7));
        add(OBSTACLE, new Location(10, 7));
        add(OBSTACLE, new Location(11, 7));
        add(OBSTACLE, new Location(12, 7));
        add(OBSTACLE, new Location(13, 7));
        add(OBSTACLE, new Location(14, 7));
        add(OBSTACLE, new Location(15, 7));
        add(OBSTACLE, new Location(16, 7));
        add(OBSTACLE, new Location(17, 7));
        add(DOT,      new Location(18, 7));
        add(OBSTACLE, new Location(19, 7));
        add(OBSTACLE, new Location(20, 7));
        add(DOT,      new Location(21, 7));
        add(OBSTACLE, new Location(22, 7));
        add(OBSTACLE, new Location(23, 7));
        add(OBSTACLE, new Location(24, 7));
        add(OBSTACLE, new Location(25, 7));
        add(DOT,      new Location(26, 7));
        add(OBSTACLE, new Location(27, 7));
        // -- row 8 --
        add(OBSTACLE, new Location( 0, 8));
        add(DOT,      new Location( 1, 8));
        add(DOT,      new Location( 2, 8));
        add(DOT,      new Location( 3, 8));
        add(DOT,      new Location( 4, 8));
        add(DOT,      new Location( 5, 8));
        add(DOT,      new Location( 6, 8));
        add(OBSTACLE, new Location( 7, 8));
        add(OBSTACLE, new Location( 8, 8));
        add(DOT,      new Location( 9, 8));
        add(DOT,      new Location(10, 8));
        add(DOT,      new Location(11, 8));
        add(DOT,      new Location(12, 8));
        add(OBSTACLE, new Location(13, 8));
        add(OBSTACLE, new Location(14, 8));
        add(DOT,      new Location(15, 8));
        add(DOT,      new Location(16, 8));
        add(DOT,      new Location(17, 8));
        add(DOT,      new Location(18, 8));
        add(OBSTACLE, new Location(19, 8));
        add(OBSTACLE, new Location(20, 8));
        add(DOT,      new Location(21, 8));
        add(DOT,      new Location(22, 8));
        add(DOT,      new Location(23, 8));
        add(DOT,      new Location(24, 8));
        add(DOT,      new Location(25, 8));
        add(DOT,      new Location(26, 8));
        add(OBSTACLE, new Location(27, 8));
        // -- row 9 --
        add(OBSTACLE, new Location( 0, 9));
        add(OBSTACLE, new Location( 1, 9));
        add(OBSTACLE, new Location( 2, 9));
        add(OBSTACLE, new Location( 3, 9));
        add(OBSTACLE, new Location( 4, 9));
        add(OBSTACLE, new Location( 5, 9));
        add(DOT,      new Location( 6, 9));
        add(OBSTACLE, new Location( 7, 9));
        add(OBSTACLE, new Location( 8, 9));
        add(OBSTACLE, new Location( 9, 9));
        add(OBSTACLE, new Location(10, 9));
        add(OBSTACLE, new Location(11, 9));
        add(NOTHING,  new Location(12, 9));
        add(OBSTACLE, new Location(13, 9));
        add(OBSTACLE, new Location(14, 9));
        add(NOTHING,  new Location(15, 9));
        add(OBSTACLE, new Location(16, 9));
        add(OBSTACLE, new Location(17, 9));
        add(OBSTACLE, new Location(18, 9));
        add(OBSTACLE, new Location(19, 9));
        add(OBSTACLE, new Location(20, 9));
        add(DOT,      new Location(21, 9));
        add(OBSTACLE, new Location(22, 9));
        add(OBSTACLE, new Location(23, 9));
        add(OBSTACLE, new Location(24, 9));
        add(OBSTACLE, new Location(25, 9));
        add(OBSTACLE, new Location(26, 9));
        add(OBSTACLE, new Location(27, 9));
        // -- row 10 --
        add(OBSTACLE, new Location( 0,10));
        add(OBSTACLE, new Location( 1,10));
        add(OBSTACLE, new Location( 2,10));
        add(OBSTACLE, new Location( 3,10));
        add(OBSTACLE, new Location( 4,10));
        add(OBSTACLE, new Location( 5,10));
        add(DOT,      new Location( 6,10));
        add(OBSTACLE, new Location( 7,10));
        add(OBSTACLE, new Location( 8,10));
        add(OBSTACLE, new Location( 9,10));
        add(OBSTACLE, new Location(10,10));
        add(OBSTACLE, new Location(11,10));
        add(NOTHING,  new Location(12,10));
        add(OBSTACLE, new Location(13,10));
        add(OBSTACLE, new Location(14,10));
        add(NOTHING,  new Location(15,10));
        add(OBSTACLE, new Location(16,10));
        add(OBSTACLE, new Location(17,10));
        add(OBSTACLE, new Location(18,10));
        add(OBSTACLE, new Location(19,10));
        add(OBSTACLE, new Location(20,10));
        add(DOT,      new Location(21,10));
        add(OBSTACLE, new Location(22,10));
        add(OBSTACLE, new Location(23,10));
        add(OBSTACLE, new Location(24,10));
        add(OBSTACLE, new Location(25,10));
        add(OBSTACLE, new Location(26,10));
        add(OBSTACLE, new Location(27,10));
        // -- row 11 --
        add(OBSTACLE, new Location( 0,11));
        add(OBSTACLE, new Location( 1,11));
        add(OBSTACLE, new Location( 2,11));
        add(OBSTACLE, new Location( 3,11));
        add(OBSTACLE, new Location( 4,11));
        add(OBSTACLE, new Location( 5,11));
        add(DOT,      new Location( 6,11));
        add(OBSTACLE, new Location( 7,11));
        add(OBSTACLE, new Location( 8,11));
        add(NOTHING,  new Location( 9,11));
        add(NOTHING,  new Location(10,11));
        add(NOTHING,  new Location(11,11));
        add(NOTHING,  new Location(12,11));
        add(NOTHING,  new Location(13,11));
        add(NOTHING,  new Location(14,11));
        add(NOTHING,  new Location(15,11));
        add(NOTHING,  new Location(16,11));
        add(NOTHING,  new Location(17,11));
        add(NOTHING,  new Location(18,11));
        add(OBSTACLE, new Location(19,11));
        add(OBSTACLE, new Location(20,11));
        add(DOT,      new Location(21,11));
        add(OBSTACLE, new Location(22,11));
        add(OBSTACLE, new Location(23,11));
        add(OBSTACLE, new Location(24,11));
        add(OBSTACLE, new Location(25,11));
        add(OBSTACLE, new Location(26,11));
        add(OBSTACLE, new Location(27,11));
        // -- row 12 --
        add(OBSTACLE, new Location( 0,12));
        add(OBSTACLE, new Location( 1,12));
        add(OBSTACLE, new Location( 2,12));
        add(OBSTACLE, new Location( 3,12));
        add(OBSTACLE, new Location( 4,12));
        add(OBSTACLE, new Location( 5,12));
        add(DOT,      new Location( 6,12));
        add(OBSTACLE, new Location( 7,12));
        add(OBSTACLE, new Location( 8,12));
        add(NOTHING,  new Location( 9,12));
        add(OBSTACLE, new Location(10,12));
        add(OBSTACLE, new Location(11,12));
        add(OBSTACLE, new Location(12,12));
        add(OBSTACLE, new Location(13,12));
        add(OBSTACLE, new Location(14,12));
        add(OBSTACLE, new Location(15,12));
        add(OBSTACLE, new Location(16,12));
        add(OBSTACLE, new Location(17,12));
        add(NOTHING,  new Location(18,12));
        add(OBSTACLE, new Location(19,12));
        add(OBSTACLE, new Location(20,12));
        add(DOT,      new Location(21,12));
        add(OBSTACLE, new Location(22,12));
        add(OBSTACLE, new Location(23,12));
        add(OBSTACLE, new Location(24,12));
        add(OBSTACLE, new Location(25,12));
        add(OBSTACLE, new Location(26,12));
        add(OBSTACLE, new Location(27,12));
        // -- row 13 --
        add(OBSTACLE, new Location( 0,13));
        add(OBSTACLE, new Location( 1,13));
        add(OBSTACLE, new Location( 2,13));
        add(OBSTACLE, new Location( 3,13));
        add(OBSTACLE, new Location( 4,13));
        add(OBSTACLE, new Location( 5,13));
        add(DOT,      new Location( 6,13));
        add(OBSTACLE, new Location( 7,13));
        add(OBSTACLE, new Location( 8,13));
        add(NOTHING,  new Location( 9,13));
        add(OBSTACLE, new Location(10,13));
        add(NOTHING,  new Location(11,13));
        add(NOTHING,  new Location(12,13));
        add(NOTHING,  new Location(13,13));
        add(NOTHING,  new Location(14,13));
        add(NOTHING,  new Location(15,13));
        add(NOTHING,  new Location(16,13));
        add(OBSTACLE, new Location(17,13));
        add(NOTHING,  new Location(18,13));
        add(OBSTACLE, new Location(19,13));
        add(OBSTACLE, new Location(20,13));
        add(DOT,      new Location(21,13));
        add(OBSTACLE, new Location(22,13));
        add(OBSTACLE, new Location(23,13));
        add(OBSTACLE, new Location(24,13));
        add(OBSTACLE, new Location(25,13));
        add(OBSTACLE, new Location(26,13));
        add(OBSTACLE, new Location(27,13));
        // -- row 14 --
        add(OBSTACLE, new Location( 0,14));
        add(OBSTACLE, new Location( 1,14));
        add(OBSTACLE, new Location( 2,14));
        add(OBSTACLE, new Location( 3,14));
        add(OBSTACLE, new Location( 4,14));
        add(OBSTACLE, new Location( 5,14));
        add(DOT,      new Location( 6,14));
        add(NOTHING,  new Location( 7,14));
        add(NOTHING,  new Location( 8,14));
        add(NOTHING,  new Location( 9,14));
        add(OBSTACLE, new Location(10,14));
        add(NOTHING,  new Location(11,14));
        add(NOTHING,  new Location(12,14));
        add(NOTHING,  new Location(13,14));
        add(NOTHING,  new Location(14,14));
        add(NOTHING,  new Location(15,14));
        add(NOTHING,  new Location(16,14));
        add(OBSTACLE, new Location(17,14));
        add(NOTHING,  new Location(18,14));
        add(NOTHING,  new Location(19,14));
        add(NOTHING,  new Location(20,14));
        add(DOT,      new Location(21,14));
        add(OBSTACLE, new Location(22,14));
        add(OBSTACLE, new Location(23,14));
        add(OBSTACLE, new Location(24,14));
        add(OBSTACLE, new Location(25,14));
        add(OBSTACLE, new Location(26,14));
        add(OBSTACLE, new Location(27,14));
        // -- row 15 --
        add(OBSTACLE, new Location( 0,15));
        add(OBSTACLE, new Location( 1,15));
        add(OBSTACLE, new Location( 2,15));
        add(OBSTACLE, new Location( 3,15));
        add(OBSTACLE, new Location( 4,15));
        add(OBSTACLE, new Location( 5,15));
        add(DOT,      new Location( 6,15));
        add(OBSTACLE, new Location( 7,15));
        add(OBSTACLE, new Location( 8,15));
        add(NOTHING,  new Location( 9,15));
        add(OBSTACLE, new Location(10,15));
        add(NOTHING,  new Location(11,15));
        add(NOTHING,  new Location(12,15));
        add(NOTHING,  new Location(13,15));
        add(NOTHING,  new Location(14,15));
        add(NOTHING,  new Location(15,15));
        add(NOTHING,  new Location(16,15));
        add(OBSTACLE, new Location(17,15));
        add(NOTHING,  new Location(18,15));
        add(OBSTACLE, new Location(19,15));
        add(OBSTACLE, new Location(20,15));
        add(DOT,      new Location(21,15));
        add(OBSTACLE, new Location(22,15));
        add(OBSTACLE, new Location(23,15));
        add(OBSTACLE, new Location(24,15));
        add(OBSTACLE, new Location(25,15));
        add(OBSTACLE, new Location(26,15));
        add(OBSTACLE, new Location(27,15));
        // -- row 16 --
        add(OBSTACLE, new Location( 0,16));
        add(OBSTACLE, new Location( 1,16));
        add(OBSTACLE, new Location( 2,16));
        add(OBSTACLE, new Location( 3,16));
        add(OBSTACLE, new Location( 4,16));
        add(OBSTACLE, new Location( 5,16));
        add(DOT,      new Location( 6,16));
        add(OBSTACLE, new Location( 7,16));
        add(OBSTACLE, new Location( 8,16));
        add(NOTHING,  new Location( 9,16));
        add(OBSTACLE, new Location(10,16));
        add(OBSTACLE, new Location(11,16));
        add(OBSTACLE, new Location(12,16));
        add(OBSTACLE, new Location(13,16));
        add(OBSTACLE, new Location(14,16));
        add(OBSTACLE, new Location(15,16));
        add(OBSTACLE, new Location(16,16));
        add(OBSTACLE, new Location(17,16));
        add(NOTHING,  new Location(18,16));
        add(OBSTACLE, new Location(19,16));
        add(OBSTACLE, new Location(20,16));
        add(DOT,      new Location(21,16));
        add(OBSTACLE, new Location(22,16));
        add(OBSTACLE, new Location(23,16));
        add(OBSTACLE, new Location(24,16));
        add(OBSTACLE, new Location(25,16));
        add(OBSTACLE, new Location(26,16));
        add(OBSTACLE, new Location(27,16));
        // -- row 17 --
        add(OBSTACLE, new Location( 0,17));
        add(OBSTACLE, new Location( 1,17));
        add(OBSTACLE, new Location( 2,17));
        add(OBSTACLE, new Location( 3,17));
        add(OBSTACLE, new Location( 4,17));
        add(OBSTACLE, new Location( 5,17));
        add(DOT,      new Location( 6,17));
        add(OBSTACLE, new Location( 7,17));
        add(OBSTACLE, new Location( 8,17));
        add(NOTHING,  new Location( 9,17));
        add(NOTHING,  new Location(10,17));
        add(NOTHING,  new Location(11,17));
        add(NOTHING,  new Location(12,17));
        add(NOTHING,  new Location(13,17));
        add(NOTHING,  new Location(14,17));
        add(NOTHING,  new Location(15,17));
        add(NOTHING,  new Location(16,17));
        add(NOTHING,  new Location(17,17));
        add(NOTHING,  new Location(18,17));
        add(OBSTACLE, new Location(19,17));
        add(OBSTACLE, new Location(20,17));
        add(DOT,      new Location(21,17));
        add(OBSTACLE, new Location(22,17));
        add(OBSTACLE, new Location(23,17));
        add(OBSTACLE, new Location(24,17));
        add(OBSTACLE, new Location(25,17));
        add(OBSTACLE, new Location(26,17));
        add(OBSTACLE, new Location(27,17));
        // -- row 18 --
        add(OBSTACLE, new Location( 0,18));
        add(OBSTACLE, new Location( 1,18));
        add(OBSTACLE, new Location( 2,18));
        add(OBSTACLE, new Location( 3,18));
        add(OBSTACLE, new Location( 4,18));
        add(OBSTACLE, new Location( 5,18));
        add(DOT,      new Location( 6,18));
        add(OBSTACLE, new Location( 7,18));
        add(OBSTACLE, new Location( 8,18));
        add(NOTHING,  new Location( 9,18));
        add(OBSTACLE, new Location(10,18));
        add(OBSTACLE, new Location(11,18));
        add(OBSTACLE, new Location(12,18));
        add(OBSTACLE, new Location(13,18));
        add(OBSTACLE, new Location(14,18));
        add(OBSTACLE, new Location(15,18));
        add(OBSTACLE, new Location(16,18));
        add(OBSTACLE, new Location(17,18));
        add(NOTHING,  new Location(18,18));
        add(OBSTACLE, new Location(19,18));
        add(OBSTACLE, new Location(20,18));
        add(DOT,      new Location(21,18));
        add(OBSTACLE, new Location(22,18));
        add(OBSTACLE, new Location(23,18));
        add(OBSTACLE, new Location(24,18));
        add(OBSTACLE, new Location(25,18));
        add(OBSTACLE, new Location(26,18));
        add(OBSTACLE, new Location(27,18));
        // -- row 19 --
        add(OBSTACLE, new Location( 0,19));
        add(OBSTACLE, new Location( 1,19));
        add(OBSTACLE, new Location( 2,19));
        add(OBSTACLE, new Location( 3,19));
        add(OBSTACLE, new Location( 4,19));
        add(OBSTACLE, new Location( 5,19));
        add(DOT,      new Location( 6,19));
        add(OBSTACLE, new Location( 7,19));
        add(OBSTACLE, new Location( 8,19));
        add(NOTHING,  new Location( 9,19));
        add(OBSTACLE, new Location(10,19));
        add(OBSTACLE, new Location(11,19));
        add(OBSTACLE, new Location(12,19));
        add(OBSTACLE, new Location(13,19));
        add(OBSTACLE, new Location(14,19));
        add(OBSTACLE, new Location(15,19));
        add(OBSTACLE, new Location(16,19));
        add(OBSTACLE, new Location(17,19));
        add(NOTHING,  new Location(18,19));
        add(OBSTACLE, new Location(19,19));
        add(OBSTACLE, new Location(20,19));
        add(DOT,      new Location(21,19));
        add(OBSTACLE, new Location(22,19));
        add(OBSTACLE, new Location(23,19));
        add(OBSTACLE, new Location(24,19));
        add(OBSTACLE, new Location(25,19));
        add(OBSTACLE, new Location(26,19));
        add(OBSTACLE, new Location(27,19));
        // -- row 20 --
        add(OBSTACLE, new Location( 0,20));
        add(DOT,      new Location( 1,20));
        add(DOT,      new Location( 2,20));
        add(DOT,      new Location( 3,20));
        add(DOT,      new Location( 4,20));
        add(DOT,      new Location( 5,20));
        add(DOT,      new Location( 6,20));
        add(DOT,      new Location( 7,20));
        add(DOT,      new Location( 8,20));
        add(DOT,      new Location( 9,20));
        add(DOT,      new Location(10,20));
        add(DOT,      new Location(11,20));
        add(DOT,      new Location(12,20));
        add(OBSTACLE, new Location(13,20));
        add(OBSTACLE, new Location(14,20));
        add(DOT,      new Location(15,20));
        add(DOT,      new Location(16,20));
        add(DOT,      new Location(17,20));
        add(DOT,      new Location(18,20));
        add(DOT,      new Location(19,20));
        add(DOT,      new Location(20,20));
        add(DOT,      new Location(21,20));
        add(DOT,      new Location(22,20));
        add(DOT,      new Location(23,20));
        add(DOT,      new Location(24,20));
        add(DOT,      new Location(25,20));
        add(DOT,      new Location(26,20));
        add(OBSTACLE, new Location(27,20));
        // -- row 21 --
        add(OBSTACLE, new Location( 0,21));
        add(DOT,      new Location( 1,21));
        add(OBSTACLE, new Location( 2,21));
        add(OBSTACLE, new Location( 3,21));
        add(OBSTACLE, new Location( 4,21));
        add(OBSTACLE, new Location( 5,21));
        add(DOT,      new Location( 6,21));
        add(OBSTACLE, new Location( 7,21));
        add(OBSTACLE, new Location( 8,21));
        add(OBSTACLE, new Location( 9,21));
        add(OBSTACLE, new Location(10,21));
        add(OBSTACLE, new Location(11,21));
        add(DOT,      new Location(12,21));
        add(OBSTACLE, new Location(13,21));
        add(OBSTACLE, new Location(14,21));
        add(DOT,      new Location(15,21));
        add(OBSTACLE, new Location(16,21));
        add(OBSTACLE, new Location(17,21));
        add(OBSTACLE, new Location(18,21));
        add(OBSTACLE, new Location(19,21));
        add(OBSTACLE, new Location(20,21));
        add(DOT,      new Location(21,21));
        add(OBSTACLE, new Location(22,21));
        add(OBSTACLE, new Location(23,21));
        add(OBSTACLE, new Location(24,21));
        add(OBSTACLE, new Location(25,21));
        add(DOT,      new Location(26,21));
        add(OBSTACLE, new Location(27,21));
        // -- row 22 --
        add(OBSTACLE, new Location( 0,22));
        add(DOT,      new Location( 1,22));
        add(OBSTACLE, new Location( 2,22));
        add(OBSTACLE, new Location( 3,22));
        add(OBSTACLE, new Location( 4,22));
        add(OBSTACLE, new Location( 5,22));
        add(DOT,      new Location( 6,22));
        add(OBSTACLE, new Location( 7,22));
        add(OBSTACLE, new Location( 8,22));
        add(OBSTACLE, new Location( 9,22));
        add(OBSTACLE, new Location(10,22));
        add(OBSTACLE, new Location(11,22));
        add(DOT,      new Location(12,22));
        add(OBSTACLE, new Location(13,22));
        add(OBSTACLE, new Location(14,22));
        add(DOT,      new Location(15,22));
        add(OBSTACLE, new Location(16,22));
        add(OBSTACLE, new Location(17,22));
        add(OBSTACLE, new Location(18,22));
        add(OBSTACLE, new Location(19,22));
        add(OBSTACLE, new Location(20,22));
        add(DOT,      new Location(21,22));
        add(OBSTACLE, new Location(22,22));
        add(OBSTACLE, new Location(23,22));
        add(OBSTACLE, new Location(24,22));
        add(OBSTACLE, new Location(25,22));
        add(DOT,      new Location(26,22));
        add(OBSTACLE, new Location(27,22));
        // -- row 23 --
        add(OBSTACLE, new Location( 0,23));
        add(DOT,      new Location( 1,23));
        add(DOT,      new Location( 2,23));
        add(DOT,      new Location( 3,23));
        add(OBSTACLE, new Location( 4,23));
        add(OBSTACLE, new Location( 5,23));
        add(DOT,      new Location( 6,23));
        add(DOT,      new Location( 7,23));
        add(DOT,      new Location( 8,23));
        add(DOT,      new Location( 9,23));
        add(DOT,      new Location(10,23));
        add(DOT,      new Location(11,23));
        add(DOT,      new Location(12,23));
        add(DOT,      new Location(13,23));
        // add(DOT,      new Location(14,23));
        add(DOT,      new Location(15,23));
        add(DOT,      new Location(16,23));
        add(DOT,      new Location(17,23));
        add(DOT,      new Location(18,23));
        add(DOT,      new Location(19,23));
        add(DOT,      new Location(20,23));
        add(DOT,      new Location(21,23));
        add(OBSTACLE, new Location(22,23));
        add(OBSTACLE, new Location(23,23));
        add(DOT,      new Location(24,23));
        add(DOT,      new Location(25,23));
        add(DOT,      new Location(26,23));
        add(OBSTACLE, new Location(27,23));
        // -- row 24 --
        add(OBSTACLE, new Location( 0,24));
        add(OBSTACLE, new Location( 1,24));
        add(OBSTACLE, new Location( 2,24));
        add(DOT,      new Location( 3,24));
        add(OBSTACLE, new Location( 4,24));
        add(OBSTACLE, new Location( 5,24));
        add(DOT,      new Location( 6,24));
        add(OBSTACLE, new Location( 7,24));
        add(OBSTACLE, new Location( 8,24));
        add(DOT,      new Location( 9,24));
        add(OBSTACLE, new Location(10,24));
        add(OBSTACLE, new Location(11,24));
        add(OBSTACLE, new Location(12,24));
        add(OBSTACLE, new Location(13,24));
        add(OBSTACLE, new Location(14,24));
        add(OBSTACLE, new Location(15,24));
        add(OBSTACLE, new Location(16,24));
        add(OBSTACLE, new Location(17,24));
        add(DOT,      new Location(18,24));
        add(OBSTACLE, new Location(19,24));
        add(OBSTACLE, new Location(20,24));
        add(DOT,      new Location(21,24));
        add(OBSTACLE, new Location(22,24));
        add(OBSTACLE, new Location(23,24));
        add(DOT,      new Location(24,24));
        add(OBSTACLE, new Location(25,24));
        add(OBSTACLE, new Location(26,24));
        add(OBSTACLE, new Location(27,24));
        // -- row 25 --
        add(OBSTACLE, new Location( 0,25));
        add(OBSTACLE, new Location( 1,25));
        add(OBSTACLE, new Location( 2,25));
        add(DOT,      new Location( 3,25));
        add(OBSTACLE, new Location( 4,25));
        add(OBSTACLE, new Location( 5,25));
        add(DOT,      new Location( 6,25));
        add(OBSTACLE, new Location( 7,25));
        add(OBSTACLE, new Location( 8,25));
        add(DOT,      new Location( 9,25));
        add(OBSTACLE, new Location(10,25));
        add(OBSTACLE, new Location(11,25));
        add(OBSTACLE, new Location(12,25));
        add(OBSTACLE, new Location(13,25));
        add(OBSTACLE, new Location(14,25));
        add(OBSTACLE, new Location(15,25));
        add(OBSTACLE, new Location(16,25));
        add(OBSTACLE, new Location(17,25));
        add(DOT,      new Location(18,25));
        add(OBSTACLE, new Location(19,25));
        add(OBSTACLE, new Location(20,25));
        add(DOT,      new Location(21,25));
        add(OBSTACLE, new Location(22,25));
        add(OBSTACLE, new Location(23,25));
        add(DOT,      new Location(24,25));
        add(OBSTACLE, new Location(25,25));
        add(OBSTACLE, new Location(26,25));
        add(OBSTACLE, new Location(27,25));
        // -- row 26 --
        add(OBSTACLE, new Location( 0,26));
        add(DOT,      new Location( 1,26));
        add(DOT,      new Location( 2,26));
        add(DOT,      new Location( 3,26));
        add(DOT,      new Location( 4,26));
        add(DOT,      new Location( 5,26));
        add(DOT,      new Location( 6,26));
        add(OBSTACLE, new Location( 7,26));
        add(OBSTACLE, new Location( 8,26));
        add(DOT,      new Location( 9,26));
        add(DOT,      new Location(10,26));
        add(DOT,      new Location(11,26));
        add(DOT,      new Location(12,26));
        add(OBSTACLE, new Location(13,26));
        add(OBSTACLE, new Location(14,26));
        add(DOT,      new Location(15,26));
        add(DOT,      new Location(16,26));
        add(DOT,      new Location(17,26));
        add(DOT,      new Location(18,26));
        add(OBSTACLE, new Location(19,26));
        add(OBSTACLE, new Location(20,26));
        add(DOT,      new Location(21,26));
        add(DOT,      new Location(22,26));
        add(DOT,      new Location(23,26));
        add(DOT,      new Location(24,26));
        add(DOT,      new Location(25,26));
        add(DOT,      new Location(26,26));
        add(OBSTACLE, new Location(27,26));
        // -- row 27 --
        add(OBSTACLE, new Location( 0,27));
        add(DOT,      new Location( 1,27));
        add(OBSTACLE, new Location( 2,27));
        add(OBSTACLE, new Location( 3,27));
        add(OBSTACLE, new Location( 4,27));
        add(OBSTACLE, new Location( 5,27));
        add(OBSTACLE, new Location( 6,27));
        add(OBSTACLE, new Location( 7,27));
        add(OBSTACLE, new Location( 8,27));
        add(OBSTACLE, new Location( 9,27));
        add(OBSTACLE, new Location(10,27));
        add(OBSTACLE, new Location(11,27));
        add(DOT,      new Location(12,27));
        add(OBSTACLE, new Location(13,27));
        add(OBSTACLE, new Location(14,27));
        add(DOT,      new Location(15,27));
        add(OBSTACLE, new Location(16,27));
        add(OBSTACLE, new Location(17,27));
        add(OBSTACLE, new Location(18,27));
        add(OBSTACLE, new Location(19,27));
        add(OBSTACLE, new Location(20,27));
        add(OBSTACLE, new Location(21,27));
        add(OBSTACLE, new Location(22,27));
        add(OBSTACLE, new Location(23,27));
        add(OBSTACLE, new Location(24,27));
        add(OBSTACLE, new Location(25,27));
        add(DOT,      new Location(26,27));
        add(OBSTACLE, new Location(27,27));
        // -- row 28 --
        add(OBSTACLE, new Location( 0,28));
        add(DOT,      new Location( 1,28));
        add(OBSTACLE, new Location( 2,28));
        add(OBSTACLE, new Location( 3,28));
        add(OBSTACLE, new Location( 4,28));
        add(OBSTACLE, new Location( 5,28));
        add(OBSTACLE, new Location( 6,28));
        add(OBSTACLE, new Location( 7,28));
        add(OBSTACLE, new Location( 8,28));
        add(OBSTACLE, new Location( 9,28));
        add(OBSTACLE, new Location(10,28));
        add(OBSTACLE, new Location(11,28));
        add(DOT,      new Location(12,28));
        add(OBSTACLE, new Location(13,28));
        add(OBSTACLE, new Location(14,28));
        add(DOT,      new Location(15,28));
        add(OBSTACLE, new Location(16,28));
        add(OBSTACLE, new Location(17,28));
        add(OBSTACLE, new Location(18,28));
        add(OBSTACLE, new Location(19,28));
        add(OBSTACLE, new Location(20,28));
        add(OBSTACLE, new Location(21,28));
        add(OBSTACLE, new Location(22,28));
        add(OBSTACLE, new Location(23,28));
        add(OBSTACLE, new Location(24,28));
        add(OBSTACLE, new Location(25,28));
        add(DOT,      new Location(26,28));
        add(OBSTACLE, new Location(27,28));
        // -- row 29 --
        add(OBSTACLE, new Location( 0,29));
        add(DOT,      new Location( 1,29));
        add(DOT,      new Location( 2,29));
        add(DOT,      new Location( 3,29));
        add(DOT,      new Location( 4,29));
        add(DOT,      new Location( 5,29));
        add(DOT,      new Location( 6,29));
        add(DOT,      new Location( 7,29));
        add(DOT,      new Location( 8,29));
        add(DOT,      new Location( 9,29));
        add(DOT,      new Location(10,29));
        add(DOT,      new Location(11,29));
        add(DOT,      new Location(12,29));
        add(DOT,      new Location(13,29));
        add(DOT,      new Location(14,29));
        add(DOT,      new Location(15,29));
        add(DOT,      new Location(16,29));
        add(DOT,      new Location(17,29));
        add(DOT,      new Location(18,29));
        add(DOT,      new Location(19,29));
        add(DOT,      new Location(20,29));
        add(DOT,      new Location(21,29));
        add(DOT,      new Location(22,29));
        add(DOT,      new Location(23,29));
        add(DOT,      new Location(24,29));
        add(DOT,      new Location(25,29));
        add(DOT,      new Location(26,29));
        add(OBSTACLE, new Location(27,29));
        // -- row 30 --     
        add(OBSTACLE, new Location( 0,30));
        add(OBSTACLE, new Location( 1,30));
        add(OBSTACLE, new Location( 2,30));
        add(OBSTACLE, new Location( 3,30));
        add(OBSTACLE, new Location( 4,30));
        add(OBSTACLE, new Location( 5,30));
        add(OBSTACLE, new Location( 6,30));
        add(OBSTACLE, new Location( 7,30));
        add(OBSTACLE, new Location( 8,30));
        add(OBSTACLE, new Location( 9,30));
        add(OBSTACLE, new Location(10,30));
        add(OBSTACLE, new Location(11,30));
        add(OBSTACLE, new Location(12,30));
        add(OBSTACLE, new Location(13,30));
        add(OBSTACLE, new Location(14,30));
        add(OBSTACLE, new Location(15,30));
        add(OBSTACLE, new Location(16,30));
        add(OBSTACLE, new Location(17,30));
        add(OBSTACLE, new Location(18,30));
        add(OBSTACLE, new Location(19,30));
        add(OBSTACLE, new Location(20,30));
        add(OBSTACLE, new Location(21,30));
        add(OBSTACLE, new Location(22,30));
        add(OBSTACLE, new Location(23,30));
        add(OBSTACLE, new Location(24,30));
        add(OBSTACLE, new Location(25,30));
        add(OBSTACLE, new Location(26,30));
        add(OBSTACLE, new Location(27,30));
    }

    private void addDotsToSet() {
        dots.add(new Location( 1, 1));
        dots.add(new Location( 2, 1));
        dots.add(new Location( 3, 1));
        dots.add(new Location( 4, 1));
        dots.add(new Location( 5, 1));
        dots.add(new Location( 6, 1));
        dots.add(new Location( 7, 1));
        dots.add(new Location( 8, 1));
        dots.add(new Location( 9, 1));
        dots.add(new Location(10, 1));
        dots.add(new Location(11, 1));
        dots.add(new Location(12, 1));
        dots.add(new Location(15, 1));
        dots.add(new Location(16, 1));
        dots.add(new Location(17, 1));
        dots.add(new Location(18, 1));
        dots.add(new Location(19, 1));
        dots.add(new Location(20, 1));
        dots.add(new Location(21, 1));
        dots.add(new Location(22, 1));
        dots.add(new Location(23, 1));
        dots.add(new Location(24, 1));
        dots.add(new Location(25, 1));
        dots.add(new Location(26, 1));
        dots.add(new Location( 1, 2));
        dots.add(new Location( 6, 2));
        dots.add(new Location(12, 2));
        dots.add(new Location(15, 2));
        dots.add(new Location(21, 2));
        dots.add(new Location(26, 2));
        dots.add(new Location( 1, 3));
        dots.add(new Location( 6, 3));
        dots.add(new Location(12, 3));
        dots.add(new Location(15, 3));
        dots.add(new Location(21, 3));
        dots.add(new Location(26, 3));
        dots.add(new Location( 1, 4));
        dots.add(new Location( 6, 4));
        dots.add(new Location(12, 4));
        dots.add(new Location(15, 4));
        dots.add(new Location(21, 4));
        dots.add(new Location(26, 4));
        dots.add(new Location( 1, 5));
        dots.add(new Location( 2, 5));
        dots.add(new Location( 3, 5));
        dots.add(new Location( 4, 5));
        dots.add(new Location( 5, 5));
        dots.add(new Location( 6, 5));
        dots.add(new Location( 7, 5));
        dots.add(new Location( 8, 5));
        dots.add(new Location( 9, 5));
        dots.add(new Location(10, 5));
        dots.add(new Location(11, 5));
        dots.add(new Location(12, 5));
        dots.add(new Location(13, 5));
        dots.add(new Location(14, 5));
        dots.add(new Location(15, 5));
        dots.add(new Location(16, 5));
        dots.add(new Location(17, 5));
        dots.add(new Location(18, 5));
        dots.add(new Location(19, 5));
        dots.add(new Location(20, 5));
        dots.add(new Location(21, 5));
        dots.add(new Location(22, 5));
        dots.add(new Location(23, 5));
        dots.add(new Location(24, 5));
        dots.add(new Location(25, 5));
        dots.add(new Location(26, 5));
        dots.add(new Location( 1, 6));
        dots.add(new Location( 6, 6));
        dots.add(new Location( 9, 6));
        dots.add(new Location(18, 6));
        dots.add(new Location(21, 6));
        dots.add(new Location(26, 6));
        dots.add(new Location( 1, 7));
        dots.add(new Location( 6, 7));
        dots.add(new Location( 9, 7));
        dots.add(new Location(18, 7));
        dots.add(new Location(21, 7));
        dots.add(new Location(26, 7));
        dots.add(new Location( 1, 8));
        dots.add(new Location( 2, 8));
        dots.add(new Location( 3, 8));
        dots.add(new Location( 4, 8));
        dots.add(new Location( 5, 8));
        dots.add(new Location( 6, 8));
        dots.add(new Location( 9, 8));
        dots.add(new Location(10, 8));
        dots.add(new Location(11, 8));
        dots.add(new Location(12, 8));
        dots.add(new Location(15, 8));
        dots.add(new Location(16, 8));
        dots.add(new Location(17, 8));
        dots.add(new Location(18, 8));
        dots.add(new Location(21, 8));
        dots.add(new Location(22, 8));
        dots.add(new Location(23, 8));
        dots.add(new Location(24, 8));
        dots.add(new Location(25, 8));
        dots.add(new Location(26, 8));
        dots.add(new Location( 6, 9));
        dots.add(new Location(21, 9));
        dots.add(new Location( 6,10));
        dots.add(new Location(21,10));
        dots.add(new Location( 6,11));
        dots.add(new Location(21,11));
        dots.add(new Location( 6,12));
        dots.add(new Location(21,12));
        dots.add(new Location( 6,13));
        dots.add(new Location(21,13));
        dots.add(new Location( 6,14));
        dots.add(new Location(21,14));
        dots.add(new Location( 6,15));
        dots.add(new Location(21,15));
        dots.add(new Location( 6,16));
        dots.add(new Location(21,16));
        dots.add(new Location( 6,17));
        dots.add(new Location(21,17));
        dots.add(new Location( 6,18));
        dots.add(new Location(21,18));
        dots.add(new Location( 6,19));
        dots.add(new Location(21,19));
        dots.add(new Location( 1,20));
        dots.add(new Location( 2,20));
        dots.add(new Location( 3,20));
        dots.add(new Location( 4,20));
        dots.add(new Location( 5,20));
        dots.add(new Location( 6,20));
        dots.add(new Location( 7,20));
        dots.add(new Location( 8,20));
        dots.add(new Location( 9,20));
        dots.add(new Location(10,20));
        dots.add(new Location(11,20));
        dots.add(new Location(12,20));
        dots.add(new Location(15,20));
        dots.add(new Location(16,20));
        dots.add(new Location(17,20));
        dots.add(new Location(18,20));
        dots.add(new Location(19,20));
        dots.add(new Location(20,20));
        dots.add(new Location(21,20));
        dots.add(new Location(22,20));
        dots.add(new Location(23,20));
        dots.add(new Location(24,20));
        dots.add(new Location(25,20));
        dots.add(new Location(26,20));
        dots.add(new Location( 1,21));
        dots.add(new Location( 6,21));
        dots.add(new Location(12,21));
        dots.add(new Location(15,21));
        dots.add(new Location(21,21));
        dots.add(new Location(26,21));
        dots.add(new Location( 1,22));
        dots.add(new Location( 6,22));
        dots.add(new Location(12,22));
        dots.add(new Location(15,22));
        dots.add(new Location(21,22));
        dots.add(new Location(26,22));
        dots.add(new Location( 1,23));
        dots.add(new Location( 2,23));
        dots.add(new Location( 3,23));
        dots.add(new Location( 6,23));
        dots.add(new Location( 7,23));
        dots.add(new Location( 8,23));
        dots.add(new Location( 9,23));
        dots.add(new Location(10,23));
        dots.add(new Location(11,23));
        dots.add(new Location(12,23));
        dots.add(new Location(13,23));
        dots.add(new Location(15,23));
        dots.add(new Location(16,23));
        dots.add(new Location(17,23));
        dots.add(new Location(18,23));
        dots.add(new Location(19,23));
        dots.add(new Location(20,23));
        dots.add(new Location(21,23));
        dots.add(new Location(24,23));
        dots.add(new Location(25,23));
        dots.add(new Location(26,23));
        dots.add(new Location( 3,24));
        dots.add(new Location( 6,24));
        dots.add(new Location( 9,24));
        dots.add(new Location(18,24));
        dots.add(new Location(21,24));
        dots.add(new Location(24,24));
        dots.add(new Location( 3,25));
        dots.add(new Location( 6,25));
        dots.add(new Location( 9,25));
        dots.add(new Location(18,25));
        dots.add(new Location(21,25));
        dots.add(new Location(24,25));
        dots.add(new Location( 1,26));
        dots.add(new Location( 2,26));
        dots.add(new Location( 3,26));
        dots.add(new Location( 4,26));
        dots.add(new Location( 5,26));
        dots.add(new Location( 6,26));
        dots.add(new Location( 9,26));
        dots.add(new Location(10,26));
        dots.add(new Location(11,26));
        dots.add(new Location(12,26));
        dots.add(new Location(15,26));
        dots.add(new Location(16,26));
        dots.add(new Location(17,26));
        dots.add(new Location(18,26));
        dots.add(new Location(21,26));
        dots.add(new Location(22,26));
        dots.add(new Location(23,26));
        dots.add(new Location(24,26));
        dots.add(new Location(25,26));
        dots.add(new Location(26,26));
        dots.add(new Location( 1,27));
        dots.add(new Location(12,27));
        dots.add(new Location(15,27));
        dots.add(new Location(26,27));
        dots.add(new Location( 1,28));
        dots.add(new Location(12,28));
        dots.add(new Location(15,28));
        dots.add(new Location(26,28));
        dots.add(new Location( 1,29));
        dots.add(new Location( 2,29));
        dots.add(new Location( 3,29));
        dots.add(new Location( 4,29));
        dots.add(new Location( 5,29));
        dots.add(new Location( 6,29));
        dots.add(new Location( 7,29));
        dots.add(new Location( 8,29));
        dots.add(new Location( 9,29));
        dots.add(new Location(10,29));
        dots.add(new Location(11,29));
        dots.add(new Location(12,29));
        dots.add(new Location(13,29));
        dots.add(new Location(14,29));
        dots.add(new Location(15,29));
        dots.add(new Location(16,29));
        dots.add(new Location(17,29));
        dots.add(new Location(18,29));
        dots.add(new Location(19,29));
        dots.add(new Location(20,29));
        dots.add(new Location(21,29));
        dots.add(new Location(22,29));
        dots.add(new Location(23,29));
        dots.add(new Location(24,29));
        dots.add(new Location(25,29));
        dots.add(new Location(26,29));
        nDots = dots.size();
    }
}